<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:slaveTypes="clr-namespace:VirtualizationListViewControl.SlaveTypes;assembly=VirtualizationListViewControl"
                    xmlns:sortAndFilterDto="clr-namespace:VirtualizationListView.SortAndFilterDTO;assembly=VirtualizationListView.SortAndFilterDTO"
                    xmlns:helpers="clr-namespace:VirtualizationListViewControl.Helpers;assembly=VirtualizationListViewControl"
                    xmlns:samplesSpecificDto="clr-namespace:SamplesSpecificDto;assembly=SamplesSpecificDto"
                    xmlns:system="clr-namespace:System;assembly=mscorlib"
                    xmlns:assert="clr-namespace:SampleWpfApplication.Views.Assert"
                    xmlns:glob="clr-namespace:System.Globalization;assembly=mscorlib"
                    xmlns:helpersLocal="clr-namespace:SampleWpfApplication.Helpers"
                    xmlns:filterExpressions="clr-namespace:VirtualizationListView.SortAndFilterDTO.Filtering.FilterExpressions;assembly=VirtualizationListView.SortAndFilterDTO"
                    xmlns:operators="clr-namespace:VirtualizationListView.SortAndFilterDTO.Filtering.FilterExpressions.Operators;assembly=VirtualizationListView.SortAndFilterDTO"
                    xmlns:validationRules="clr-namespace:SampleWpfApplication.Views.ValidationRules">

    <system:Double x:Key="FieldFontSize">11</system:Double>
    <system:Double x:Key="FieldHeight">50</system:Double>

    <slaveTypes:VirtualizationListViewColumnCollection x:Key="FilteringAndSortingHttpResponceViewStyle">
        <!-- Detect Time -->
        <slaveTypes:VirtualizationListViewColumn Header="Detect Time"
                                                 Width="100"
                                                 FilterOperator="GreaterOrEqual">
            <slaveTypes:VirtualizationListViewColumn.CellTemplate>
                <DataTemplate>
                    <helpers:RemoveParentMargin>
                        <Border BorderThickness="0,0,1,0" BorderBrush="{StaticResource SeparatorBackground}"
                                Height="{StaticResource FieldHeight}"
                                HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                                Width="100">
                            <!-- Bind over Data property on DataWrapper wrap -->
                            <TextBox Text="{Binding Data.DetectTime, Converter={StaticResource StringToDateTimeConverter}, ConverterCulture={x:Static glob:CultureInfo.CurrentCulture}, Mode=OneWay}" 
                                     BorderThickness="0" IsReadOnly="True" Background="Transparent"
                                     TextAlignment="Center" TextWrapping="Wrap"
                                     FontSize="{StaticResource FieldFontSize}" FontWeight="Bold"
                                     Foreground="{StaticResource ItemText}"
                                     HorizontalAlignment="Center" VerticalAlignment="Center"
                                     Width="100"
                                     Margin="10,3"/>
                        </Border>
                    </helpers:RemoveParentMargin>
                </DataTemplate>
            </slaveTypes:VirtualizationListViewColumn.CellTemplate>
            <slaveTypes:VirtualizationListViewColumn.BoundProperty>
                <!-- Define your property description on CellTemplate -->
                <sortAndFilterDto:FieldDescription FieldName="DetectTime" 
                                                   Assembly="SamplesBasicDto" 
                                                   DeclaringType="SamplesBasicDto.HttpResponce"/>
            </slaveTypes:VirtualizationListViewColumn.BoundProperty>
            <slaveTypes:VirtualizationListViewColumn.FilterValueTemplate>
                <DataTemplate>
                    <!-- Bind to Content with RelativeSource with find ancestor type ContentControl -->
                    <TextBox Name="DateTimeTextBox"
                             Text="{Binding Content, RelativeSource={RelativeSource FindAncestor, AncestorType=ContentControl}, Mode=TwoWay, Converter={StaticResource StringToDateTimeConverter}, ConverterCulture={x:Static glob:CultureInfo.CurrentCulture}, UpdateSourceTrigger=LostFocus}"
                             assert:PopupCalendar.TargetTextBox="{Binding ElementName=DateTimeTextBox}"
                             helpersLocal:InputBindingManager.UpdatePropertySourceWhenEnterPressed="TextBox.Text"
                             ToolTip="Filter by detect time" 
                             HorizontalAlignment="Stretch" VerticalAlignment="Stretch"/>
                </DataTemplate>
            </slaveTypes:VirtualizationListViewColumn.FilterValueTemplate>
            <slaveTypes:VirtualizationListViewColumn.FilterBoundProperty>
                <!-- Define your property description on Fast filter row -->
                <sortAndFilterDto:FieldDescription FieldName="DetectTime" 
                                                   Assembly="SamplesBasicDto" 
                                                   DeclaringType="SamplesBasicDto.HttpResponce"/>
            </slaveTypes:VirtualizationListViewColumn.FilterBoundProperty>
        </slaveTypes:VirtualizationListViewColumn>

        <!-- Mime Type -->
        <slaveTypes:VirtualizationListViewColumn Header="Mime Type"
                                                 Width="86">
            <slaveTypes:VirtualizationListViewColumn.CellTemplate>
                <DataTemplate>
                    <helpers:RemoveParentMargin>
                        <Border BorderThickness="0,0,1,0" BorderBrush="{StaticResource SeparatorBackground}"
                                Height="{StaticResource FieldHeight}"
                                HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                                Width="86">
                            <!-- Bind over Data property on DataWrapper wrap -->
                            <TextBox Text="{Binding Data.MimeType, Mode=OneWay, Converter={StaticResource MimeTypesConverter}}" 
                                     BorderThickness="0" IsReadOnly="True" Background="Transparent"
                                     TextAlignment="Center" TextWrapping="Wrap"
                                     FontSize="{StaticResource FieldFontSize}" FontWeight="Bold"
                                     Foreground="{StaticResource ItemText}"
                                     HorizontalAlignment="Center" VerticalAlignment="Center"
                                     Width="65"
                                     Margin="10,3"/>
                        </Border>
                    </helpers:RemoveParentMargin>
                </DataTemplate>
            </slaveTypes:VirtualizationListViewColumn.CellTemplate>
            <slaveTypes:VirtualizationListViewColumn.BoundProperty>
                <!-- Define your property description on CellTemplate -->
                <sortAndFilterDto:FieldDescription FieldName="MimeType" 
                                                   Assembly="SamplesBasicDto" 
                                                   DeclaringType="SamplesBasicDto.HttpResponce"/>
            </slaveTypes:VirtualizationListViewColumn.BoundProperty>
            <slaveTypes:VirtualizationListViewColumn.FilterValueTemplate>
                <DataTemplate>
                    <ComboBox ItemsSource="{Binding Source={StaticResource MimeTypesConverter}}"
                              SelectedItem="{Binding Path=Content, RelativeSource={RelativeSource FindAncestor, AncestorType=ContentControl}, Converter={StaticResource MimeTypesConverter}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                              ToolTip="Filter by MIME type"
                              FontSize="14"
                              HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                              HorizontalContentAlignment="Center" VerticalContentAlignment="Center"/>
                </DataTemplate>
            </slaveTypes:VirtualizationListViewColumn.FilterValueTemplate>
            <slaveTypes:VirtualizationListViewColumn.FilterBoundProperty>
                <!-- Define your property description on Fast filter row -->
                <sortAndFilterDto:FieldDescription FieldName="MimeType" 
                                                   Assembly="SamplesBasicDto" 
                                                   DeclaringType="SamplesBasicDto.HttpResponce"/>
            </slaveTypes:VirtualizationListViewColumn.FilterBoundProperty>
        </slaveTypes:VirtualizationListViewColumn>

        <!-- Size -->
        <slaveTypes:VirtualizationListViewColumn Header="Size"
                                                 Width="86">
            <slaveTypes:VirtualizationListViewColumn.CellTemplate>
                <DataTemplate>
                    <helpers:RemoveParentMargin>
                        <Border BorderThickness="0,0,1,0" BorderBrush="{StaticResource SeparatorBackground}"
                                Height="{StaticResource FieldHeight}"
                                HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                                Width="86">
                            <StackPanel Orientation="Vertical"
                                        Margin="10,3">
                                <!-- Bind over Data property on DataWrapper wrap -->
                                <TextBox Text="{Binding Data.Size, Mode=OneWay}" 
                                         BorderThickness="0" IsReadOnly="True" Background="Transparent"
                                         TextAlignment="Center" TextWrapping="Wrap"
                                         FontSize="{StaticResource FieldFontSize}" FontWeight="Bold"
                                         Foreground="{StaticResource ItemText}"
                                         HorizontalAlignment="Center" VerticalAlignment="Center"
                                         Width="65"/>
                                <TextBlock Text="bytes"
                                           FontSize="{StaticResource FieldFontSize}" FontWeight="Bold"
                                           Foreground="{StaticResource ItemText}"
                                           HorizontalAlignment="Center" VerticalAlignment="Center"/>
                            </StackPanel>
                        </Border>
                    </helpers:RemoveParentMargin>
                </DataTemplate>
            </slaveTypes:VirtualizationListViewColumn.CellTemplate>
            <slaveTypes:VirtualizationListViewColumn.BoundProperty>
                <!-- Define your property description on CellTemplate -->
                <sortAndFilterDto:FieldDescription FieldName="Size" 
                                                   Assembly="SamplesBasicDto" 
                                                   DeclaringType="SamplesBasicDto.HttpResponce"/>
            </slaveTypes:VirtualizationListViewColumn.BoundProperty>
            <slaveTypes:VirtualizationListViewColumn.FilterValueTemplate>
                <DataTemplate>
                    <!-- Bind to Content with RelativeSource with find ancestor type ContentControl -->
                    <TextBox Text="{Binding Content, RelativeSource={RelativeSource FindAncestor, AncestorType=ContentControl}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                             ToolTip="Filter by Size" 
                             HorizontalAlignment="Stretch" VerticalAlignment="Stretch"/>
                </DataTemplate>
            </slaveTypes:VirtualizationListViewColumn.FilterValueTemplate>
            <slaveTypes:VirtualizationListViewColumn.FilterBoundProperty>
                <!-- Define your property description on Fast filter row -->
                <sortAndFilterDto:FieldDescription FieldName="Size" 
                                                   Assembly="SamplesBasicDto" 
                                                   DeclaringType="SamplesBasicDto.HttpResponce"/>
            </slaveTypes:VirtualizationListViewColumn.FilterBoundProperty>
        </slaveTypes:VirtualizationListViewColumn>

        <!-- EncodingType (HttpTextResponce) -->
        <slaveTypes:VirtualizationListViewColumn Header="Encoding Type"
                                                 Width="120">
            <slaveTypes:VirtualizationListViewColumn.CellTemplate>
                <DataTemplate>
                    <helpers:RemoveParentMargin>
                        <Border BorderThickness="0,0,1,0" BorderBrush="{StaticResource SeparatorBackground}"
                                Height="{StaticResource FieldHeight}"
                                HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                                Width="120">
                            <!-- Bind over Data property on DataWrapper wrap -->
                            <TextBox Text="{Binding Data.EncodingType, Mode=OneWay}" 
                                     BorderThickness="0" IsReadOnly="True" Background="Transparent"
                                     TextAlignment="Center" TextWrapping="Wrap"
                                     FontSize="{StaticResource FieldFontSize}" FontWeight="Bold"
                                     Foreground="{StaticResource ItemText}"
                                     HorizontalAlignment="Center" VerticalAlignment="Center"
                                     Width="65"
                                     Margin="10,3"/>
                        </Border>
                    </helpers:RemoveParentMargin>
                </DataTemplate>
            </slaveTypes:VirtualizationListViewColumn.CellTemplate>
            <slaveTypes:VirtualizationListViewColumn.BoundProperty>
                <!-- Define your property description on CellTemplate -->
                <sortAndFilterDto:FieldDescription FieldName="EncodingType" 
                                                   Assembly="SamplesSpecificDto" 
                                                   DeclaringType="SamplesSpecificDto.HttpTextResponce"/>
            </slaveTypes:VirtualizationListViewColumn.BoundProperty>
            <slaveTypes:VirtualizationListViewColumn.FilterValueTemplate>
                <DataTemplate>
                    <!-- Bind to Content with RelativeSource with find ancestor type ContentControl -->
                    <TextBox Text="{Binding Content, RelativeSource={RelativeSource FindAncestor, AncestorType=ContentControl}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                             ToolTip="Filter by Encoding type" 
                             HorizontalAlignment="Stretch" VerticalAlignment="Stretch"/>
                </DataTemplate>
            </slaveTypes:VirtualizationListViewColumn.FilterValueTemplate>
            <slaveTypes:VirtualizationListViewColumn.FilterBoundProperty>
                <!-- Define your property description on Fast filter row -->
                <sortAndFilterDto:FieldDescription FieldName="EncodingType" 
                                                   Assembly="SamplesSpecificDto" 
                                                   DeclaringType="SamplesSpecificDto.HttpTextResponce"/>
            </slaveTypes:VirtualizationListViewColumn.FilterBoundProperty>
        </slaveTypes:VirtualizationListViewColumn>

        <!-- ImageSize & ColorDepth (HttpImageResponce) -->
        <slaveTypes:VirtualizationListViewColumn Header="Image Parameters"
                                                 Width="200">
            <slaveTypes:VirtualizationListViewColumn.CellTemplate>
                <DataTemplate>
                    <helpers:RemoveParentMargin>
                        <Border BorderThickness="0,0,1,0" BorderBrush="{StaticResource SeparatorBackground}"
                                Height="{StaticResource FieldHeight}"
                                HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                                Width="200">
                            <!-- Bind over Data property on DataWrapper wrap -->
                            <ContentControl Content="{Binding Data, Mode=OneWay}"
                                            Margin="10,3">
                                <ContentControl.Resources>
                                    <DataTemplate DataType="{x:Type samplesSpecificDto:HttpImageResponce}">
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition/>
                                                <ColumnDefinition/>
                                            </Grid.ColumnDefinitions>
                                            <Grid.RowDefinitions>
                                                <RowDefinition/>
                                                <RowDefinition/>
                                            </Grid.RowDefinitions>

                                            <TextBlock Grid.Column="0" Grid.Row="0" 
                                                       Text="Image Size"
                                                       Foreground="{StaticResource ItemTextDisabled}"
                                                       FontSize="12"
                                                       HorizontalAlignment="Center" VerticalAlignment="Top"/>
                                            <StackPanel Grid.Column="0" Grid.Row="1" 
                                                        Orientation="Horizontal"
                                                        HorizontalAlignment="Center" VerticalAlignment="Center">
                                                <TextBox Text="{Binding ImageSize.Width, Mode=OneWay}" 
                                                         BorderThickness="0" IsReadOnly="True" Background="Transparent"
                                                         TextAlignment="Center" TextWrapping="Wrap"
                                                         FontSize="{StaticResource FieldFontSize}" FontWeight="Bold"
                                                         Foreground="{StaticResource ItemText}"/>
                                                <TextBlock Text="x"
                                                           Foreground="{StaticResource ItemText}"
                                                           FontSize="{StaticResource FieldFontSize}" FontWeight="Bold"
                                                           Margin="3,0"/>
                                                <TextBox Text="{Binding ImageSize.Height, Mode=OneWay}" 
                                                         BorderThickness="0" IsReadOnly="True" Background="Transparent"
                                                         TextAlignment="Center" TextWrapping="Wrap"
                                                         FontSize="{StaticResource FieldFontSize}" FontWeight="Bold"
                                                         Foreground="{StaticResource ItemText}"/>
                                            </StackPanel>

                                            <TextBlock Grid.Column="1" Grid.Row="0" 
                                                       Text="Color Depth"
                                                       Foreground="{StaticResource ItemTextDisabled}"
                                                       FontSize="12"
                                                       HorizontalAlignment="Center" VerticalAlignment="Top"/>
                                            <TextBox Grid.Column="1" Grid.Row="1" 
                                                     Text="{Binding ColorDepth, Mode=OneWay}" 
                                                     BorderThickness="0" IsReadOnly="True" Background="Transparent"
                                                     TextAlignment="Center" TextWrapping="Wrap"
                                                     FontSize="{StaticResource FieldFontSize}" FontWeight="Bold"
                                                     Foreground="{StaticResource ItemText}"
                                                     HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                        </Grid>
                                    </DataTemplate>

                                    <DataTemplate DataType="{x:Type samplesSpecificDto:HttpTextResponce}"/>
                                    <DataTemplate DataType="{x:Type samplesSpecificDto:HttpVideoResponce}"/>
                                </ContentControl.Resources>
                            </ContentControl>
                        </Border>
                    </helpers:RemoveParentMargin>
                </DataTemplate>
            </slaveTypes:VirtualizationListViewColumn.CellTemplate>
            <slaveTypes:VirtualizationListViewColumn.BoundProperty>
                <!-- Define your property description on CellTemplate -->
                <!-- Set only one property for sorting -->
                <sortAndFilterDto:FieldDescription FieldName="Width" 
                                                   Assembly="System.Drawing" 
                                                   DeclaringType="System.Drawing.Size"/>
            </slaveTypes:VirtualizationListViewColumn.BoundProperty>
        </slaveTypes:VirtualizationListViewColumn>

        <!-- Resolution, Duration & CodecType (HttpVideoResponce) -->
        <!-- If Width not set, that column has max space width -->
        <slaveTypes:VirtualizationListViewColumn Header="Video Parameters">
            <slaveTypes:VirtualizationListViewColumn.CellTemplate>
                <DataTemplate>
                    <helpers:RemoveParentMargin>
                        <Border BorderThickness="0" BorderBrush="{StaticResource SeparatorBackground}"
                                Height="{StaticResource FieldHeight}"
                                HorizontalAlignment="Left" VerticalAlignment="Stretch"
                                Width="300">
                            <!-- Bind over Data property on DataWrapper wrap -->
                            <ContentControl Content="{Binding Data, Mode=OneWay}"
                                            Margin="10,3">
                                <ContentControl.Resources>
                                    <DataTemplate DataType="{x:Type samplesSpecificDto:HttpVideoResponce}">
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition/>
                                                <ColumnDefinition/>
                                                <ColumnDefinition/>
                                            </Grid.ColumnDefinitions>
                                            <Grid.RowDefinitions>
                                                <RowDefinition/>
                                                <RowDefinition/>
                                            </Grid.RowDefinitions>

                                            <TextBlock Grid.Column="0" Grid.Row="0" 
                                                       Text="Duration"
                                                       Foreground="{StaticResource ItemTextDisabled}"
                                                       FontSize="12"
                                                       HorizontalAlignment="Center" VerticalAlignment="Top"/>
                                            <TextBox Grid.Column="0" Grid.Row="1" 
                                                     Text="{Binding Duration, Mode=OneWay}" 
                                                     BorderThickness="0" IsReadOnly="True" Background="Transparent"
                                                     TextAlignment="Center" TextWrapping="Wrap"
                                                     FontSize="{StaticResource FieldFontSize}" FontWeight="Bold"
                                                     Foreground="{StaticResource ItemText}"
                                                     HorizontalAlignment="Center" VerticalAlignment="Center"/>

                                            <TextBlock Grid.Column="1" Grid.Row="0" 
                                                       Text="Resolution"
                                                       Foreground="{StaticResource ItemTextDisabled}"
                                                       FontSize="12"
                                                       HorizontalAlignment="Center" VerticalAlignment="Top"/>
                                            <StackPanel Grid.Column="1" Grid.Row="1" 
                                                        Orientation="Horizontal"
                                                        HorizontalAlignment="Center" VerticalAlignment="Center">
                                                <TextBox Text="{Binding Resolution.Width, Mode=OneWay}" 
                                                         BorderThickness="0" IsReadOnly="True" Background="Transparent"
                                                         TextAlignment="Center" TextWrapping="Wrap"
                                                         FontSize="{StaticResource FieldFontSize}" FontWeight="Bold"
                                                         Foreground="{StaticResource ItemText}"/>
                                                <TextBlock Text="x"
                                                           Foreground="{StaticResource ItemText}"
                                                           FontSize="{StaticResource FieldFontSize}" FontWeight="Bold"
                                                           Margin="3,0"/>
                                                <TextBox Text="{Binding Resolution.Height, Mode=OneWay}" 
                                                         BorderThickness="0" IsReadOnly="True" Background="Transparent"
                                                         TextAlignment="Center" TextWrapping="Wrap"
                                                         FontSize="{StaticResource FieldFontSize}" FontWeight="Bold"
                                                         Foreground="{StaticResource ItemText}"/>
                                            </StackPanel>

                                            <TextBlock Grid.Column="2" Grid.Row="0" 
                                                       Text="Codec Type"
                                                       Foreground="{StaticResource ItemTextDisabled}"
                                                       FontSize="12"
                                                       HorizontalAlignment="Center" VerticalAlignment="Top"/>
                                            <TextBox Grid.Column="2" Grid.Row="1" 
                                                     Text="{Binding CodecType, Mode=OneWay}" 
                                                     BorderThickness="0" IsReadOnly="True" Background="Transparent"
                                                     TextAlignment="Center" TextWrapping="Wrap"
                                                     FontSize="{StaticResource FieldFontSize}" FontWeight="Bold"
                                                     Foreground="{StaticResource ItemText}"
                                                     HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                        </Grid>
                                    </DataTemplate>

                                    <DataTemplate DataType="{x:Type samplesSpecificDto:HttpTextResponce}"/>
                                    <DataTemplate DataType="{x:Type samplesSpecificDto:HttpImageResponce}"/>
                                </ContentControl.Resources>
                            </ContentControl>
                        </Border>
                    </helpers:RemoveParentMargin>
                </DataTemplate>
            </slaveTypes:VirtualizationListViewColumn.CellTemplate>
            <slaveTypes:VirtualizationListViewColumn.BoundProperty>
                <!-- Define your property description on CellTemplate -->
                <!-- Set only one property for sorting -->
                <sortAndFilterDto:FieldDescription FieldName="Duration" 
                                                   Assembly="SamplesSpecificDto" 
                                                   DeclaringType="SamplesSpecificDto.HttpVideoResponce"/>
            </slaveTypes:VirtualizationListViewColumn.BoundProperty>
        </slaveTypes:VirtualizationListViewColumn>
    </slaveTypes:VirtualizationListViewColumnCollection>

    <slaveTypes:FilterablePropertyDescriptionCollection x:Key="HttpResponceAvailableFilterableProperties">
        <!-- Detect Time -->
        <slaveTypes:FilterablePropertyDescription Title="Detect Time">
            <slaveTypes:FilterablePropertyDescription.ValueTemplate>
                <DataTemplate DataType="{x:Type filterExpressions:ExpressionTreeValueLeaf}">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>

                        <TextBlock Grid.Row="0"
								   Text="Enter date:"
                                   TextWrapping="Wrap"
								   Margin="5,3"/>

                        <Calendar Grid.Row="1" 
                                  SelectionMode="SingleDate"
                                  SelectedDate="{Binding FieldValue, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource DateTimeConverter}, ConverterParameter=date}"
                                  IsTodayHighlighted="True"/>

                        <TextBlock Grid.Row="2"
								   Text="Enter time:"
                                   HorizontalAlignment="Left"/>
                        <TextBox Grid.Row="2"
                                 FontSize="14"
                                 Width="50" Height="24"
                                 VerticalAlignment="Bottom" HorizontalAlignment="Right">
                            <TextBox.Tag>
                                <!-- Add this converter for correct work your filter when user enter uncorrect value -->
                                <!-- Use validation rules and convert it's results to ValidationResponce object -->
                                <MultiBinding Converter="{StaticResource ValidationErrorToResponseConverter}" ConverterParameter="Detect Time">
                                    <Binding Path="DataContext" RelativeSource="{RelativeSource Self}"/>
                                    <Binding Path="(Validation.Errors)[0].ErrorContent" RelativeSource="{RelativeSource Self}"/>
                                </MultiBinding>
                            </TextBox.Tag>
                            <TextBox.Text>
                                <Binding Path="FieldValue"
                                         StringFormat="HH:mm"
                                         Mode="TwoWay"
                                         Converter="{StaticResource DateTimeConverter}"
                                         ConverterParameter="time"
                                         UpdateSourceTrigger="PropertyChanged"
                                         NotifyOnValidationError="True">
                                    <Binding.ValidationRules>
                                        <validationRules:TimeValidationRule/>
                                    </Binding.ValidationRules>
                                </Binding>
                            </TextBox.Text>
                            <Validation.ErrorTemplate>
                                <ControlTemplate>
                                    <DockPanel LastChildFill="True">
                                        <TextBlock x:Name="ErrorTextBlock" 
                                                   DockPanel.Dock="Left"
                                                   Foreground="White"
                                                   FontSize="14"
                                                   TextWrapping="Wrap"
                                                   Width="280"
                                                   Background="Red"
                                                   Text="{Binding ElementName=MyAdorner, Path=AdornedElement.(Validation.Errors)[0].ErrorContent, UpdateSourceTrigger=PropertyChanged}"/>
                                        <Border BorderBrush="Red" BorderThickness="1">
                                            <AdornedElementPlaceholder Name="MyAdorner"/>
                                        </Border>
                                    </DockPanel>
                                </ControlTemplate>
                            </Validation.ErrorTemplate>
                        </TextBox>
                    </Grid>
                </DataTemplate>
            </slaveTypes:FilterablePropertyDescription.ValueTemplate>
            <slaveTypes:FilterablePropertyDescription.BoundProperty>
                <!-- Define your property description for filter -->
                <sortAndFilterDto:FieldDescription FieldName="DetectTime" 
                                                   Assembly="SamplesBasicDto" 
                                                   DeclaringType="SamplesBasicDto.HttpResponce"/>
            </slaveTypes:FilterablePropertyDescription.BoundProperty>
            <!-- You may set what operations are available foe this filter -->
            <slaveTypes:FilterablePropertyDescription.AvailableOperators>
                <operators:ComparisonOperators>Equal</operators:ComparisonOperators>
                <operators:ComparisonOperators>NotEqual</operators:ComparisonOperators>
                <operators:ComparisonOperators>Less</operators:ComparisonOperators>
                <operators:ComparisonOperators>LessOrEqual</operators:ComparisonOperators>
                <operators:ComparisonOperators>Greater</operators:ComparisonOperators>
                <operators:ComparisonOperators>GreaterOrEqual</operators:ComparisonOperators>
            </slaveTypes:FilterablePropertyDescription.AvailableOperators>
        </slaveTypes:FilterablePropertyDescription>

        <!-- Mime Type -->
        <slaveTypes:FilterablePropertyDescription Title="MIME type"
                                                  ValueToStringConverter="{StaticResource MimeTypesConverter}">
            <slaveTypes:FilterablePropertyDescription.ValueTemplate>
                <DataTemplate DataType="{x:Type filterExpressions:ExpressionTreeValueLeaf}">
                    <StackPanel Orientation="Vertical"
                                Margin="5,5">
                        <TextBlock Text="MIME type:"
                                   HorizontalAlignment="Left"
                                   FontSize="18" FontFamily="Segoe UI"/>

                        <ComboBox ItemsSource="{Binding Source={StaticResource MimeTypesConverter}}"
                                  SelectedItem="{Binding FieldValue, Converter={StaticResource MimeTypesConverter}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                  FontSize="14"
                                  HorizontalAlignment="Left"
                                  HorizontalContentAlignment="Center" VerticalContentAlignment="Center"
                                  Width="200" Height="26"/>
                    </StackPanel>
                </DataTemplate>
            </slaveTypes:FilterablePropertyDescription.ValueTemplate>
            <slaveTypes:FilterablePropertyDescription.BoundProperty>
                <!-- Define your property description for filter -->
                <sortAndFilterDto:FieldDescription FieldName="MimeType" 
                                                   Assembly="SamplesBasicDto" 
                                                   DeclaringType="SamplesBasicDto.HttpResponce"/>
            </slaveTypes:FilterablePropertyDescription.BoundProperty>
            <!-- You may set what operations are available for this filter -->
            <slaveTypes:FilterablePropertyDescription.AvailableOperators>
                <operators:ComparisonOperators>Equal</operators:ComparisonOperators>
                <operators:ComparisonOperators>NotEqual</operators:ComparisonOperators>
            </slaveTypes:FilterablePropertyDescription.AvailableOperators>
        </slaveTypes:FilterablePropertyDescription>
    </slaveTypes:FilterablePropertyDescriptionCollection>

</ResourceDictionary>